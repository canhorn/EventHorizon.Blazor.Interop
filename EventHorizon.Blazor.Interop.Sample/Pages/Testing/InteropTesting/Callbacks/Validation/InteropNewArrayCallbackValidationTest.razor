<div>
    <h3>Array Callback Validation</h3>
    <div class="--lighter">Interop New</div>
    <div>
        Status:
        @if (TestStatus == "Passed")
        {
            <span class="green-badge">@TestStatus</span>
        }
        else if (TestStatus == "Failed")
        {
            <span class="red-badge">@TestStatus</span>
        }
        else
        {
            <span>@TestStatus</span>
        }
    </div>
    <button class="run-btn" @onclick="HandleRunTest">Run</button>
</div>

<script suppress-error="BL9992">
    (function () {
        window["InteropNewArrayCallbackValidationTest"] = function (callbackAction) {
            const callbackActions = [];

            if (typeof callbackAction === "function") {
                callbackActions.push(callbackAction);
            }

            this.trigger = () => {
                callbackActions.forEach(
                    action => action([{ id: "class1" }, { id: "class2" }, { id: "class3" }])
                );
            };
        };
    })();
</script>

@code {
    public string TestStatus = "Pending";

    private string testId => "InteropNewArrayCallbackValidationTest";
    private bool initialized = false;
    private ICachedEntity cachedEntity;

    private ClassIdCachedEntity actualClass1;
    private string expectedClass1 = "class1";
    private ClassIdCachedEntity actualClass2;
    private string expectedClass2 = "class2";
    private ClassIdCachedEntity actualClass3;
    private string expectedClass3 = "class3";

    private void HandleRunTest()
    {
        TestStatus = "Running...";
        if (!initialized)
        {
            var actionHandler = new ActionCallback<List<ClassIdCachedEntity>>((arg1) =>
            {
                actualClass1 = arg1[0];
                actualClass2 = arg1[1];
                actualClass3 = arg1[2];
                return Task.CompletedTask;
            });

            cachedEntity = EventHorizonBlazorInterop.New(
                new string[] { testId },
                actionHandler
            );
            initialized = true;
        }

        RunTest();
        ValidateTest();
    }

    public void RunTest()
    {
        EventHorizonBlazorInterop.Call(
            cachedEntity,
            "trigger"
        );
    }

    public void ValidateTest()
    {
        var value = actualClass1.Id;
        if (actualClass1.Id == expectedClass1
            && actualClass2.Id == expectedClass2
            && actualClass3.Id == expectedClass3
        )
        {
            TestStatus = "Passed";
        }
        else
        {
            TestStatus = "Failed";
        }
    }
}
