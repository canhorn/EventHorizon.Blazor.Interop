@using System.Globalization
<div>
    <h3>Literal Decimal Number Cluture Info Validation</h3>
    <div class="--lighter">Interop Get</div>
    <div>
        Status:
        @if (TestStatus == "Passed")
        {
            <span class="green-badge">@TestStatus</span>
        }
        else if (TestStatus == "Failed")
        {
            <span class="red-badge">@TestStatus</span>
        }
        else
        {
            <span>@TestStatus</span>
        }
    </div>
    <button class="run-btn" @onclick="HandleRunTest">Run</button>
</div>

<script suppress-error="BL9992">
    (function () {
        window["InteropDecimalNumberClutureInfoTest"] = {
            value: 0.0000000000000001334646852585,
        };
    })();
</script>

@code {
    public string TestStatus = "Pending";

    private string testId => "InteropDecimalNumberClutureInfoTest";
    private decimal result;
    private decimal expected = 0.0000000000000001334646852585m;

    private void HandleRunTest()
    {
        var clutureInfo = CultureInfo.CurrentCulture;
        try
        {
            // Using de-DE because the decimal place is ',' for decimal/numbers.
            CultureInfo.CurrentCulture = new CultureInfo(
                "de-DE"
            );

            RunTest();
            ValidateTest();
        }
        catch { }
        finally
        {
            // Reset back to ClutureInfo before test changed it.
            CultureInfo.CurrentCulture = clutureInfo;
        }
    }

    public void RunTest()
    {
        result = EventHorizonBlazorInterop.Get<decimal>(
            testId,
            "value"
        );
    }

    public void ValidateTest()
    {
        if (result == expected)
        {
            TestStatus = "Passed";
        }
        else
        {
            TestStatus = "Failed";
        }
    }
}
